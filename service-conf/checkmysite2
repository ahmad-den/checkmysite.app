server {
    server_name checkmysite.app www.checkmysite.app;

    # Serve the React app from the build directory
    root /var/www/checkmysite2/frontend/build;  # Point root to React build folder

    # Serve static files from the React build
    location / {
        try_files $uri /index.html;  # Fallback to index.html for SPA routing
    }

    # Proxy requests to the Python Backend (API) on port 5000
    location /api/ {
        proxy_pass http://unix:/var/www/checkmysite2/backend/backend.sock;
	proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts for long-running requests
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # Proxy requests to the Node.js Lighthouse Backend on port 5001
    location /lighthouse/ {
        proxy_pass http://localhost:5001;  # Proxy to Node.js API backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy the Node.js Reports folder (from Lighthouse backend) on port 5001
location /reports/ {
    proxy_pass http://localhost:5001;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}


    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";

    # SSL Configuration (provided by Certbot)
    listen 443 ssl;  # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/checkmysite.app/fullchain.pem;  # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/checkmysite.app/privkey.pem;  # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;  # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;  # managed by Certbot
}

server {
    if ($host = www.checkmysite.app) {
        return 301 https://$host$request_uri;
    }
    if ($host = checkmysite.app) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name checkmysite.app www.checkmysite.app;
    return 404;  # managed by Certbot
}

